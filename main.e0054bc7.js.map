{"version":3,"sources":["scripts/main.js"],"names":["baseUrl","detailsURL","getPhones","fetchingPromise","fetch","then","response","ok","json","Promise","reject","Error","status","statusText","setTimeout","getPhonesDetails","id","detailsArr","phonesWithDetails","phones","promisesArr","map","phone","ul","document","createElement","body","append","all","details","el","push","li","innerText","name","catch","error"],"mappings":";AAAA,aAEA,IAAMA,EACF,wEAEEC,EACF,mEAEEC,EAAY,WACVC,IAAAA,EAAkBC,MAAMJ,GAC3BK,KAAK,SAAAC,GACA,OAACA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAASL,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,gBAiB5CV,OAVgB,IAAIM,QACzB,WACEK,WAAW,WACTX,EAAgBO,OAAO,YACtB,OAIQL,OAERF,GAGHY,EAAmB,SAACC,GACjBZ,OAAAA,MAASH,GAAAA,OAAAA,EAAce,KAAAA,OAAAA,EAAvB,UACJX,KAAK,SAAAC,GACA,OAACA,EAASC,GAMPD,EAASE,OALPC,QAAQC,OACb,IAAIC,MAASL,GAAAA,OAAAA,EAASM,OAAYN,OAAAA,OAAAA,EAASO,iBAQ/CI,EAAa,GACbC,EAAoB,GAE1BhB,IACGG,KAAK,SAAAc,GACEC,IAAAA,EAAcD,EAAOE,IAAI,SAAAC,GAASP,OAAAA,EAAiBO,EAAMN,MAEzDO,EAAKC,SAASC,cAAc,MAElCD,SAASE,KAAKC,OAAOJ,GAErBd,QAAQmB,IAAIR,GACTf,KAAK,SAAAwB,GACJA,EAAQR,IAAI,SAAAS,GACVb,EAAWc,KAAKD,GAEVE,IAAAA,EAAKR,SAASC,cAAc,MAElCO,EAAGC,UAAYH,EAAGI,KAClBX,EAAGI,OAAOK,GAEVb,EAAOE,IAAI,SAAAC,GACTA,EAAMO,QAAUC,EAChBZ,EAAkBa,KAAKT,WAKhCa,MAAM,SAAAC,GAASA,OAAAA","file":"main.e0054bc7.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst baseUrl\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\n\nconst detailsURL\n  = 'https://mate-academy.github.io/phone-catalogue-static/api/phones';\n\nconst getPhones = () => {\n  const fetchingPromise = fetch(baseUrl)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`)\n        );\n      }\n\n      return response.json();\n    });\n\n  const waitingPromise = new Promise(\n    () => {\n      setTimeout(() => {\n        fetchingPromise.reject('timeout');\n      }, 5000);\n    }\n  );\n\n  waitingPromise.then();\n\n  return fetchingPromise;\n};\n\nconst getPhonesDetails = (id) => {\n  return fetch(`${detailsURL}/${id}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(\n          new Error(`${response.status} - ${response.statusText}`)\n        );\n      }\n\n      return response.json();\n    });\n};\n\nconst detailsArr = [];\nconst phonesWithDetails = [];\n\ngetPhones()\n  .then(phones => {\n    const promisesArr = phones.map(phone => getPhonesDetails(phone.id));\n\n    const ul = document.createElement('ul');\n\n    document.body.append(ul);\n\n    Promise.all(promisesArr)\n      .then(details => {\n        details.map(el => {\n          detailsArr.push(el);\n\n          const li = document.createElement('li');\n\n          li.innerText = el.name;\n          ul.append(li);\n\n          phones.map(phone => {\n            phone.details = el;\n            phonesWithDetails.push(phone);\n          });\n        });\n      });\n  })\n  .catch(error => error);\n"]}